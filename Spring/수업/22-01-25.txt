interface
exception

게시판 글 작성 ( insert )
게시판 목록 조회 ( select )
게시판 상세 조회 ( select )
게시판 상세페이지 수정 ( update )
게시판 상세페이지 삭제 ( delete )

실행 흐름
- 컨트롤러 -> 서비스인터페이스 -> 서비스 -> 레포지토리인터페이스 -> 레포지토리
- 인터페이스에는 @Component, @Service, @Repository, @Controller 같은 어노테이션이 들어가지 않음
- 인터페이스에 접근 시 해당 인터페이스를 구현하는 class에 어노테이션 작성하여 spring에 선언
- 해당 인터페이스를 접근 시 전달할 class에 @Autowried를 이용하여 spring으로 부터 자동으로 받아와야함
ex) @Autowired
	private BoardService service;

ModelAndView
ex)	@GetMapping("list")		// 게시글 목록 조회
	public ModelAndView list(ModelAndView mv) {		// Model말고 이런것도 존재
		List<BoardDto> list = service.selectBoard(); 
		mv.addObject("list",list);	// model
		mv.setViewName("board/list");	// view 
		return mv;			// view 선택
	}

@PathVariable을 이용한 mapping 전달 방식 변경
- 보통의 파라미터 전송 url ( detail?boardNum=3 )
- @PathVarialbe를 사용한 파라미터 전송 url ( detail/3 )
ex)	@GetMapping("detail/{t}")	// jsp에서 특정값을 전달받음 ( 이름은 임의적으로 t로 선언 )
	public String detail(@PathVariable String t, Model model) {		// @PathVariable 은 GetMapping에서 {}의 값과 이름을 같게 설정한 후 사용, 															// detail?title=t가 아닌 detail/t의 링크로 실행 가능
		BoardDto dto = service.selectBoardDetail(t);		// detail?title=t가 아닌 detail/t의 링크로 실행 가능 ( url에 등록한 값을 파라미터로 사용가능 )
		model.addAttribute("dto", dto);