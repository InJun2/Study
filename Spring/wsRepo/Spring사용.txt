Spring 사용하는방법 : sts, plug in
- Spring 4부터는 스프링 부트 사용
- 현재수업에서는 Spring Tools 3버전 사용
- Spring 개념은 디스패처 서블릿의 이해가 중요
-이클립스 버전 2021-12사용,  jdk11.0.13사용 (환경변수 설정) , 플러그인 사용

sts
-spring.io/tools 검색해서 sts 설치 ( 플러그인 최적화해둔 것 )

-plug in
-이클립스 내에서 플러그 인으로 설치 ( eclipse marketplace )


Spring project
-작업은 src에서 작업하고 해당 작업들은 target으로 들어가게 됨

POM : 프로젝트 객체 모델
pom.xml 
-packaging : war 타입, jar 타입 ( 웹 사용이므로 지금은 war )
-properties : 변수 같은것 ( 현재 문서에서 사용할 변수 생성 )
-dependency : 프로젝트에 라이브러리를 담아둠 ( properties 에서 값 가져옴 )
	( 프로젝트의 Maven Dependencies 에 보면 해당 dependency의 version에 맞는 artifactId 존재 ( Maven이 설치해준 것 ), 
	확인 시 설치경로가 기본 설치경로로 되어있음 )
- pom.xml에서 수정한 후 해당프로젝트 우클릭 -> maven -> update project로 변경사항 패치


Maven 저장소 변경 ( 기존 저장소 사용시 충돌하는 경우가 많음 )
- window -> preference -> maven ->userSettings  -> xml 생성 후 해당 경로로 userSettings 변경 -> Update Settings클릭
( xml 만들때 maven settings.xml 검색 하여 참고, 해당 xml 파일에서 localRepository에 maven 저장할 저장소 폴더 경로 적기 )
(-- 현재 maven 폴더에 xml파일, libs  폴더 위치 --)


버전에 맞는 jar수정하기 ( maven을 이용한 jar 버전 수정 )
web.xml 
- web-app의 version에 tomcat version을 검색해서 해당 버전으로 변경 -> web.xml version 검색해서 해당 servlet 버전에 맞는 스키마 헤더로수정

web.xml 수정 후 pom.xml 수정
- servlet 주석처리되어있는 mvn repo 사이트에서 해당 dependency의 artifactId를 검색 ( 우선servlet-api 검색 )
-> 이후 해당groub id에 맞는 것 클릭 ( 이전했다는 Note가 있으면 그곳으로 이동 ), 검색한 tomcat 버전에 맞는 servlet 버전사용
-> 해당버전의 maven 텍스트필드 클릭하여 복사 -> dependency 지우고 붙여놓기
-> 마찬가지로 jsp-api도 진행
-> springframework-version 버전 변경 ( 일단 전자정부프레임워크가 4.3.25.RELEASE를 사용하므로 해당버전으로 변경 )
-> 해당 프로젝트 우클릭 -> maven update 실행

pom.xml에서 변경한 것 정리
1. java version
- source
- target
2. org.springframework-version
3. dependency > servlet
4. dependency > jsp

web.xml에서 변경한것 정리
1. web-app 태그의 속성값 ( web 버전에 맞는)

home.jsp 변경한것 정리
1. jstl 이노테이션 제거

servlet-context.xml
- annotation-driven : 어노테이션을 사용하는 것을 알수있음
- context : 해당 프로젝트 탐색하여 확인
	


